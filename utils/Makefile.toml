# vim: set ts=4 sw=4 expandtab:

[tasks.init]
script_runner = "@rust"
script = [
'''
use std::env;
fn main() -> std::result::Result<(), std::env::VarError> {
    let os = env::var("CARGO_MAKE_RUST_TARGET_OS")?;
    let arch = env::var("CARGO_MAKE_RUST_TARGET_ARCH")?;

    let (prefix, dylib_suffix) = match os.as_ref() {
        "linux" | "freebsd" => ("l", "so"),
        "macos" => ("d", "dylib"),
        "windows" => ("m", "dll"),
        "openbsd" => ("o", "so"),
        _ => panic!("unhandled os {}", os)
    };

    let suffix = match arch.as_ref() {
        "x86" => "i386",
        "x86_64" => "amd64",
        "arm" => "arm",
        "aarch64" => "arm64",
        "powerpc" => "ppc",
        _ => panic!("unhandled arch {}", arch)
    };

    env::set_var("PLATFORM_EXTERNAL_EXT", format!("{}_{}", prefix, suffix));
    env::set_var("PLATFORM_DYLIB_EXT", dylib_suffix);

    Ok(())
}
'''
]

[tasks.echo]
script = [
'''
echo PLATFORM_DYLIB_EXT: ${PLATFORM_DYLIB_EXT}
echo PLATFORM_EXTERNAL_EXT: ${PLATFORM_EXTERNAL_EXT}
'''
]

[tasks.build]
args = ["build", "--release"]

[tasks.clean]
dependencies = ["clean-artifacts"]
command = "cargo"
args = ["clean"]

[tasks.post-build]
dependencies = ["move"]

[tasks.clean-artifacts]
script_runner = "@shell"
script = [ "rm -rf ${CARGO_MAKE_CRATE_FS_NAME} *.dek*" ]

[tasks.package]
dependencies = ["move"]
command = "deken"
args = ["package", "-v", "${CARGO_MAKE_CRATE_VERSION}", "${CARGO_MAKE_CRATE_FS_NAME}"]

[tasks.platform-env.linux]
env = { "PLATFORM_EXTERNAL_EXT" = "pd_linux", "PLATFORM_DYLIB_EXT" = "so" }
private = true

[tasks.platform-env.mac]
env = { "PLATFORM_EXTERNAL_EXT" = "pd_darwin", "PLATFORM_DYLIB_EXT" = "dylib" }
private = true

[tasks.name-env]
env = { "LIB_TILDE" = "target/release/lib${CARGO_MAKE_CRATE_FS_NAME}_tilde.${PLATFORM_DYLIB_EXT}", "LIB" = "target/release/lib${CARGO_MAKE_CRATE_FS_NAME}.${PLATFORM_DYLIB_EXT}", "EXTERNAL_TILDE" = "${CARGO_MAKE_CRATE_FS_NAME}~.${PLATFORM_EXTERNAL_EXT}", "EXTERNAL" = "${CARGO_MAKE_CRATE_FS_NAME}.${PLATFORM_EXTERNAL_EXT}" }
private = true

[tasks.move]
dependencies = ["build", "name-env"]
script_runner = "@shell"
script = [
    '''
    mkdir -p ${CARGO_MAKE_CRATE_FS_NAME}
    [ -f ${LIB_TILDE} ] && rsync -a ${LIB_TILDE} ${CARGO_MAKE_CRATE_FS_NAME}/${EXTERNAL_TILDE} || rsync -a ${LIB} ${CARGO_MAKE_CRATE_FS_NAME}/${EXTERNAL}
    '''
]

[tasks.run.linux]
dependencies = ["move"]
command = "pd"
args = ["test.pd"]

[tasks.run.mac]
dependencies = ["move"]
command = "open"
args = ["test.pd"]
